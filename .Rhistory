genres = genre, followers = content$followers, id = content$id)
}
}
if (byName == TRUE){
url <- glue('https://api.spotify.com/v1/search?q={artist}&type=artist&limit=5')
response <- GET(url, add_headers(q = artist, type = "artist", Accept = "application/json",
Authorization = paste("Bearer", authentication_token)))
content <- content(response)
if (dataframe == TRUE){
df <- data.frame(name = character(),
popularity = integer(),
genres = character(),
followers = integer(),
id = character())
for (i in 1:5){
if(length(content$artists$items[[i]]$genres) != 0){
genre <- content$artists$items[[i]]$genres[[1]]
}
else{
genre <- "Unknown"
}
row <- data.frame(name = content$artists$items[[i]]$name[1],
popularity = content$artists$items[[i]]$popularity,
genres =genre,
followers = content$artists$items[[i]]$followers$total,
id = content$artists$items[[i]]$id)
df <- rbind(df, row)
}
df
}
}
}
ghost <- getArtistInfo(authentication_token, "1Qp56T7n950O3EGMsSl81D")
getArtistInfo <- function(authentication_token, artist, byName = FALSE, dataframe = TRUE){
if (byName == FALSE){
url <- "https://api.spotify.com/v1/artists/"
query <- artist
response <- GET(paste0(url, query),
add_headers(Accept = "application/json",
Authorization = paste("Bearer", authentication_token)))
content <- content(response)
if(dataframe == TRUE){
# The dataframe can only handle 1 genre, but the requst returns a list.
# We only take the top genre, and if there are none, we set it as unknown.
if(length(content$genres) != 0){
genre <- content$genres[[1]]
}
else{
genre <- "Unknown"
}
df <- data.frame(name  = content$name, popularity = content$popularity,
genres = genre, followers = content$followers$total, id = content$id)
}
}
if (byName == TRUE){
url <- glue('https://api.spotify.com/v1/search?q={artist}&type=artist&limit=5')
response <- GET(url, add_headers(q = artist, type = "artist", Accept = "application/json",
Authorization = paste("Bearer", authentication_token)))
content <- content(response)
if (dataframe == TRUE){
df <- data.frame(name = character(),
popularity = integer(),
genres = character(),
followers = integer(),
id = character())
for (i in 1:5){
if(length(content$artists$items[[i]]$genres) != 0){
genre <- content$artists$items[[i]]$genres[[1]]
}
else{
genre <- "Unknown"
}
row <- data.frame(name = content$artists$items[[i]]$name[1],
popularity = content$artists$items[[i]]$popularity,
genres =genre,
followers = content$artists$items[[i]]$followers$total,
id = content$artists$items[[i]]$id)
df <- rbind(df, row)
}
df
}
}
}
ghost <- getArtistInfo(authentication_token, "1Qp56T7n950O3EGMsSl81D")
getArtistInfo <- function(authentication_token, artist, byName = FALSE, dataframe = TRUE){
if (byName == FALSE){
url <- "https://api.spotify.com/v1/artists/"
query <- artist
response <- GET(paste0(url, query),
add_headers(Accept = "application/json",
Authorization = paste("Bearer", authentication_token)))
content <- content(response)
content
if(dataframe == TRUE){
# The dataframe can only handle 1 genre, but the requst returns a list.
# We only take the top genre, and if there are none, we set it as unknown.
if(length(content$genres) != 0){
genre <- content$genres[[1]]
}
else{
genre <- "Unknown"
}
df <- data.frame(name  = content$name, popularity = content$popularity,
genres = genre, followers = content$followers$total, id = content$id)
}
}
if (byName == TRUE){
url <- glue('https://api.spotify.com/v1/search?q={artist}&type=artist&limit=5')
response <- GET(url, add_headers(q = artist, type = "artist", Accept = "application/json",
Authorization = paste("Bearer", authentication_token)))
content <- content(response)
if (dataframe == TRUE){
df <- data.frame(name = character(),
popularity = integer(),
genres = character(),
followers = integer(),
id = character())
for (i in 1:5){
if(length(content$artists$items[[i]]$genres) != 0){
genre <- content$artists$items[[i]]$genres[[1]]
}
else{
genre <- "Unknown"
}
row <- data.frame(name = content$artists$items[[i]]$name[1],
popularity = content$artists$items[[i]]$popularity,
genres =genre,
followers = content$artists$items[[i]]$followers$total,
id = content$artists$items[[i]]$id)
df <- rbind(df, row)
}
df
}
}
}
ghost <- getArtistInfo(authentication_token, "1Qp56T7n950O3EGMsSl81D")
getArtistInfo <- function(authentication_token, artist, byName = FALSE){
if (byName == FALSE){
url <- "https://api.spotify.com/v1/artists/"
query <- artist
response <- GET(paste0(url, query),
add_headers(Accept = "application/json",
Authorization = paste("Bearer", authentication_token)))
content <- content(response)
# The dataframe can only handle 1 genre, but the requst returns a list.
# We only take the top genre, and if there are none, we set it as unknown.
if(length(content$genres) != 0){
genre <- content$genres[[1]]
}
else{
genre <- "Unknown"
}
df <- data.frame(name  = content$name, popularity = content$popularity,
genres = genre, followers = content$followers$total, id = content$id)
}
if (byName == TRUE){
url <- glue('https://api.spotify.com/v1/search?q={artist}&type=artist&limit=5')
response <- GET(url, add_headers(q = artist, type = "artist", Accept = "application/json",
Authorization = paste("Bearer", authentication_token)))
content <- content(response)
df <- data.frame(name = character(),
popularity = integer(),
genres = character(),
followers = integer(),
id = character())
for (i in 1:5){
if(length(content$artists$items[[i]]$genres) != 0){
genre <- content$artists$items[[i]]$genres[[1]]
}
else{
genre <- "Unknown"
}
row <- data.frame(name = content$artists$items[[i]]$name[1],
popularity = content$artists$items[[i]]$popularity,
genres =genre,
followers = content$artists$items[[i]]$followers$total,
id = content$artists$items[[i]]$id)
df <- rbind(df, row)
}
df
}
}
ghost <- getArtistInfo(authentication_token, "1Qp56T7n950O3EGMsSl81D")
getArtistInfo <- function(authentication_token, artist, byName = FALSE){
if (byName == FALSE){
url <- "https://api.spotify.com/v1/artists/"
query <- artist
response <- GET(paste0(url, query),
add_headers(Accept = "application/json",
Authorization = paste("Bearer", authentication_token)))
content <- content(response)
# The dataframe can only handle 1 genre, but the requst returns a list.
# We only take the top genre, and if there are none, we set it as unknown.
if(length(content$genres) != 0){
genre <- content$genres[[1]]
}
else{
genre <- "Unknown"
}
df <- data.frame(name  = content$name, popularity = content$popularity,
genres = genre, followers = content$followers$total, id = content$id)
return(df)
}
if (byName == TRUE){
url <- glue('https://api.spotify.com/v1/search?q={artist}&type=artist&limit=5')
response <- GET(url, add_headers(q = artist, type = "artist", Accept = "application/json",
Authorization = paste("Bearer", authentication_token)))
content <- content(response)
df <- data.frame(name = character(),
popularity = integer(),
genres = character(),
followers = integer(),
id = character())
for (i in 1:5){
if(length(content$artists$items[[i]]$genres) != 0){
genre <- content$artists$items[[i]]$genres[[1]]
}
else{
genre <- "Unknown"
}
row <- data.frame(name = content$artists$items[[i]]$name[1],
popularity = content$artists$items[[i]]$popularity,
genres =genre,
followers = content$artists$items[[i]]$followers$total,
id = content$artists$items[[i]]$id)
df <- rbind(df, row)
}
df
}
}
ghost <- getArtistInfo(authentication_token, "1Qp56T7n950O3EGMsSl81D")
View(ghost)
getSongInfo <- function(authentication_token, song, dataframe = TRUE){
url <- "https://api.spotify.com/v1/tracks/"
query <- song
response <- GET(paste0(url, query),
add_headers(Accept = "application/json",
Authorization = paste("Bearer", authentication_token)))
content <- content(response)
if (dataframe = TRUE){
getSongInfo <- function(authentication_token, song, dataframe = TRUE){
url <- "https://api.spotify.com/v1/tracks/"
query <- song
response <- GET(paste0(url, query),
add_headers(Accept = "application/json",
Authorization = paste("Bearer", authentication_token)))
content <- content(response)
if (dataframe == TRUE){
df <- data.frame(artist = content$artists[[1]]$name, album  = content$album$name,
trackName = content$name, release_date = content$album$release_date,
popularity = content$popularity, duration = content$duration,
id = content$id)
return(df)
}
else{
return(content)
}
}
dance <- getSongInfo(authentication_token, "1E2WTcYLP1dFe1tiGDwRmT")
View(dance)
dance <- getSongInfo(authentication_token, "1E2WTcYLP1dFe1tiGDwRmT", dataframe = FALSE)
View(dance)
getRelatedArtists <- function(authentication_token, artistId, dataframe =  TRUE){
url <- glue("https://api.spotify.com/v1/artists/{artistId}/related-artists")
response <- GET(url, add_headers(Accept = "application/json",
Authorization = paste("Bearer", authentication_token)))
content <- content(response)
if(dataframe == TRUE){
df <- data.frame(artist = character(), id = character())
for (i in 1:length(content$artists)){
row <- data.frame(name = content$artists[[i]]$name,
id = content$artists[[1]]$id)
df <- rbind(df, row)
}
return(df)
}
else{
return(content)
}
}
x <- getRelatedArtists(authentication_token, "1Qp56T7n950O3EGMsSl81D")
View(x)
x <- getRelatedArtists(authentication_token, "1Qp56T7n950O3EGMsSl81D", dataframe = FALSE)
View(x)
getArtistInfo <- function(authentication_token, artist, byName = FALSE){
if (byName == FALSE){
url <- "https://api.spotify.com/v1/artists/"
query <- artist
response <- GET(paste0(url, query),
add_headers(Accept = "application/json",
Authorization = paste("Bearer", authentication_token)))
content <- content(response)
if (dataframe = TRUE){
getArtistInfo <- function(authentication_token, artist, byName = FALSE){
if (byName == FALSE){
url <- "https://api.spotify.com/v1/artists/"
query <- artist
response <- GET(paste0(url, query),
add_headers(Accept = "application/json",
Authorization = paste("Bearer", authentication_token)))
content <- content(response)
if (dataframe == TRUE){
# The dataframe can only handle 1 genre, but the requst returns a list.
# We only take the top genre, and if there are none, we set it as unknown.
if(length(content$genres) != 0){
genre <- content$genres[[1]]
}
else{
genre <- "Unknown"
}
df <- data.frame(name  = content$name, popularity = content$popularity,
genres = genre, followers = content$followers$total, id = content$id)
return(df)
}
else{
return(content)
}
}
if (byName == TRUE){
url <- glue('https://api.spotify.com/v1/search?q={artist}&type=artist&limit=5')
response <- GET(url, add_headers(q = artist, type = "artist", Accept = "application/json",
Authorization = paste("Bearer", authentication_token)))
content <- content(response)
if (dataframe == TRUE){
df <- data.frame(name = character(),
popularity = integer(),
genres = character(),
followers = integer(),
id = character())
for (i in 1:5){
if(length(content$artists$items[[i]]$genres) != 0){
genre <- content$artists$items[[i]]$genres[[1]]
}
else{
genre <- "Unknown"
}
row <- data.frame(name = content$artists$items[[i]]$name[1],
popularity = content$artists$items[[i]]$popularity,
genres =genre,
followers = content$artists$items[[i]]$followers$total,
id = content$artists$items[[i]]$id)
df <- rbind(df, row)
}
return(df)
}
else{
return(content)
}
}
}
ghost <- getArtistInfo(authentication_token, "1Qp56T7n950O3EGMsSl81D")
getArtistInfo <- function(authentication_token, artist, byName = FALSE, dataframe = TRUE){
if (byName == FALSE){
url <- "https://api.spotify.com/v1/artists/"
query <- artist
response <- GET(paste0(url, query),
add_headers(Accept = "application/json",
Authorization = paste("Bearer", authentication_token)))
content <- content(response)
if (dataframe == TRUE){
# The dataframe can only handle 1 genre, but the requst returns a list.
# We only take the top genre, and if there are none, we set it as unknown.
if(length(content$genres) != 0){
genre <- content$genres[[1]]
}
else{
genre <- "Unknown"
}
df <- data.frame(name  = content$name, popularity = content$popularity,
genres = genre, followers = content$followers$total, id = content$id)
return(df)
}
else{
return(content)
}
}
if (byName == TRUE){
url <- glue('https://api.spotify.com/v1/search?q={artist}&type=artist&limit=5')
response <- GET(url, add_headers(q = artist, type = "artist", Accept = "application/json",
Authorization = paste("Bearer", authentication_token)))
content <- content(response)
if (dataframe == TRUE){
df <- data.frame(name = character(),
popularity = integer(),
genres = character(),
followers = integer(),
id = character())
for (i in 1:5){
if(length(content$artists$items[[i]]$genres) != 0){
genre <- content$artists$items[[i]]$genres[[1]]
}
else{
genre <- "Unknown"
}
row <- data.frame(name = content$artists$items[[i]]$name[1],
popularity = content$artists$items[[i]]$popularity,
genres =genre,
followers = content$artists$items[[i]]$followers$total,
id = content$artists$items[[i]]$id)
df <- rbind(df, row)
}
return(df)
}
else{
return(content)
}
}
}
ghost <- getArtistInfo(authentication_token, "1Qp56T7n950O3EGMsSl81D")
ghost <- getArtistInfo(authentication_token, "1Qp56T7n950O3EGMsSl81D", dataframe = FALSE)
ghost <- getArtistInfo(authentication_token, "Ghost", byName = TRUE)
View(ghost)
ghost <- getArtistInfo(authentication_token, "1Qp56T7n950O3EGMsSl81D", dataframe = FALSE)
View(ghost)
ghost <- getArtistInfo(authentication_token, "Ghost", byName = TRUE, dataframe = FALSE)
View(ghost)
getTopSongs <- function(authentication_token, artistId, dataframe =  TRUE){
url <- glue("https://api.spotify.com/v1/artists/{artistId}/top-tracks")
response <- GET(url, add_headers(Accept = "application/json",
Authorization = paste("Bearer", authentication_token)))
content <- content(response)
if(dataframe == TRUE){
df <- data.frame(artist = character(), id = character())
for (i in 1:length(content$artists)){
row <- data.frame(name = content$artists[[i]]$name,
id = content$artists[[1]]$id)
df <- rbind(df, row)
}
return(df)
}
else{
return(content)
}
}
x <- getTopSongs(authentication_token, "1Qp56T7n950O3EGMsSl81D", dataframe = FALSE)
View(x)
getTopSongs <- function(authentication_token, artistId, dataframe =  TRUE, region = "CA"){
url <- glue("https://api.spotify.com/v1/artists/{artistId}/top-tracks?market={region}")
response <- GET(url, add_headers(Accept = "application/json",
Authorization = paste("Bearer", authentication_token)))
content <- content(response)
if(dataframe == TRUE){
df <- data.frame(artist = character(), id = character())
for (i in 1:length(content$artists)){
row <- data.frame(name = content$artists[[i]]$name,
id = content$artists[[1]]$id)
df <- rbind(df, row)
}
return(df)
}
else{
return(content)
}
}
x <- getTopSongs(authentication_token, "1Qp56T7n950O3EGMsSl81D", dataframe = FALSE)
View(x)
length(x)
x$tracks
x$tracks[[1]]$album
x$tracks[[1]]$name
x$tracks[[1]]$id
getTopSongs <- function(authentication_token, artistId, dataframe =  TRUE, region = "CA"){
url <- glue("https://api.spotify.com/v1/artists/{artistId}/top-tracks?market={region}")
response <- GET(url, add_headers(Accept = "application/json",
Authorization = paste("Bearer", authentication_token)))
content <- content(response)
if(dataframe == TRUE){
df <- data.frame(song = character(), id = character())
for (i in 1:length(content$tracks)){
row <- data.frame(song = content$tracks[[i]]$name,
id = content$tracks[[i]]$id)
df <- rbind(df, row)
}
return(df)
}
else{
return(content)
}
}
x <- getTopSongs(authentication_token, "1Qp56T7n950O3EGMsSl81D", dataframe = TRUE)
View(x)
ghost <- getArtistInfo(authentication_token, "Ghost", byName = TRUE, dataframe = TRUE)
View(ghost)
install.packages("roxygen2")
install.packages("devtools")
getwd()
setwd(Documents)
setwd("~/Documents/Masters/block4/534_cloud/DATA534_Project_G2")
document()
library(roxygen2)
library(devtools)
document()
create("spotifyApi")
setwd("~/Documents/Masters/block4/534_cloud")
create("spotifyApi")
setwd("~/Documents/Masters/block4/534_cloud/DATA534_Project_G2")
document()
document()
library(roxygen2)
library(devtools)
document()
getwd()
knitr::opts_chunk$set(echo = TRUE)
source('EricsFunctions.R')
source('EricsFunctions.R')
knitr::opts_chunk$set(echo = TRUE)
source('EricsFunctions.R')
source('EricsFunctions.R')
knitr::opts_chunk$set(echo = TRUE)
source('EricsFunctions.R')
source('R/EricsFunctions.R')
source('DATA534_Project_G2/R/EricsFunctions.R')
