luka_top <- genres.luka %>%
count(Genres) %>%
filter(Genres != "Unknown") %>%
arrange(desc(n)) %>%
head(15) %>%
ggplot(aes(x= -n, y = reorder(Genres, n))) +
geom_bar(stat = "identity", fill = "#D95F02") +
scale_x_continuous(breaks = c(-200,-150, -100, -50, 0), labels = c(200,150, 100, 50, 0), limits = c(-200, 0)) +
ggtitle("                   Luka's Top Genres") +
scale_color_brewer(palette = 'Dark2') +
theme_classic() +
theme(axis.title.y = element_blank(), axis.title.x = element_blank())
## DELETE one of these two
## Primary plot RELATIVE to each other
genrecomparision <- proportions %>% mutate(score_2 = (proportion_Eric - proportion_Luka)/(proportion_Eric + proportion_Luka)) %>%
ggplot(aes(y = reorder(Genres, score_2), x = score_2, col = score_2)) +
geom_vline(xintercept = 0) +
geom_point(size = 5) +
scale_x_continuous(breaks = c(-1, -0.75, -0.5, -0.25, 0, 0.25, 0.5, 0.75, 1),
labels=c("Preferred by Luka", -0.75, -0.5, -0.25, 0, 0.25, 0.5, 0.75, "Preferred by Eric"),
limits = c(-1, 1.3)) +
scale_color_gradient(low = "#D95F02", high = "#1B9E77") +
theme_classic() +
theme(axis.title.y = element_blank(), legend.position = 'none', axis.title.x = element_blank(), panel.grid.major.x = element_line('#ededed'))
## Primary plot ABSOLUTE to each other
genrecomparision2 <- proportions %>% mutate(score = (proportion_Eric - proportion_Luka)) %>%
ggplot(aes(y = reorder(Genres, score), x = score, col = score)) +
geom_vline(xintercept = 0) +
geom_point(size = 5) +
scale_x_continuous(breaks = c(-1, 0, 1),
labels=c("Preferred by Luka", 0, "Preferred by Eric"),
limits = c(-0.2, 0.238)) +
scale_color_gradient(low = "#D95F02", high = "#1B9E77") +
theme_classic() +
theme(axis.title.y = element_blank(), legend.position = 'none', axis.title.x = element_blank(), panel.grid.major.x = element_line('#ededed'))
## Combine
options(repr.plot.width = 6, repr.plot.height = 15, repr.plot.res = 500)
grid.arrange(grobs = list(luka_top, eric_top, genrecomparision),
layout_matrix = rbind(c(3), c(1, 2)),
top = textGrob("Genre Preferences Between Eric and Luka",
gp = gpar(fontsize = 20, fontface = 2)),
bottom = textGrob("Count of Genre Tags in Library",
gp = gpar(fontsize = 14, fontface = 1),
hjust = 1, x = 0.63))
## Create graph of Eric's top genres
eric_top <- genres.eric %>%
replace(.=="NULL", "Unknown") %>%
count(Genres) %>% arrange(desc(n)) %>%
head(15) %>%
ggplot(aes(x= n, y = reorder(Genres, n))) +
geom_bar(stat = "identity", fill = "#1B9E77") +
scale_y_discrete(position = "right") +
ggtitle("                   Eric's Top Genres") +
scale_color_brewer(palette = 'Dark2') +
theme_classic() +
theme(axis.title.y = element_blank(), axis.title.x = element_blank())
## Create graph of Luka's top genres
luka_top <- genres.luka %>%
count(Genres) %>%
filter(Genres != "Unknown") %>%
arrange(desc(n)) %>%
head(15) %>%
ggplot(aes(x= -n, y = reorder(Genres, n))) +
geom_bar(stat = "identity", fill = "#D95F02") +
scale_x_continuous(breaks = c(-200,-150, -100, -50, 0), labels = c(200,150, 100, 50, 0), limits = c(-200, 0)) +
ggtitle("                   Luka's Top Genres") +
scale_color_brewer(palette = 'Dark2') +
theme_classic() +
theme(axis.title.y = element_blank(), axis.title.x = element_blank())
## DELETE one of these two
## Primary plot RELATIVE to each other
genrecomparision <- proportions %>% mutate(score_2 = (proportion_Eric - proportion_Luka)/(proportion_Eric + proportion_Luka)) %>%
ggplot(aes(y = reorder(Genres, score_2), x = score_2, col = score_2)) +
geom_vline(xintercept = 0) +
geom_point(size = 5) +
scale_x_continuous(breaks = c(-0.5, 0, 0.5),
labels=c("Preferred by Luka", "Similar Preference", "Preferred by Eric"),
limits = c(-1, 1.3)) +
scale_color_gradient(low = "#D95F02", high = "#1B9E77") +
theme_classic() +
theme(axis.title.y = element_blank(), legend.position = 'none', axis.title.x = element_blank(), panel.grid.major.x = element_line('#ededed'))
## Primary plot ABSOLUTE to each other
genrecomparision2 <- proportions %>% mutate(score = (proportion_Eric - proportion_Luka)) %>%
ggplot(aes(y = reorder(Genres, score), x = score, col = score)) +
geom_vline(xintercept = 0) +
geom_point(size = 5) +
scale_x_continuous(breaks = c(-1, 0, 1),
labels=c("Preferred by Luka", 0, "Preferred by Eric"),
limits = c(-0.2, 0.238)) +
scale_color_gradient(low = "#D95F02", high = "#1B9E77") +
theme_classic() +
theme(axis.title.y = element_blank(), legend.position = 'none', axis.title.x = element_blank(), panel.grid.major.x = element_line('#ededed'))
## Combine
options(repr.plot.width = 6, repr.plot.height = 15, repr.plot.res = 500)
grid.arrange(grobs = list(luka_top, eric_top, genrecomparision),
layout_matrix = rbind(c(3), c(1, 2)),
top = textGrob("Genre Preferences Between Eric and Luka",
gp = gpar(fontsize = 20, fontface = 2)),
bottom = textGrob("Count of Genre Tags in Library",
gp = gpar(fontsize = 14, fontface = 1),
hjust = 1, x = 0.63))
## Create graph of Eric's top genres
eric_top <- genres.eric %>%
replace(.=="NULL", "Unknown") %>%
count(Genres) %>% arrange(desc(n)) %>%
head(15) %>%
ggplot(aes(x= n, y = reorder(Genres, n))) +
geom_bar(stat = "identity", fill = "#1B9E77") +
scale_y_discrete(position = "right") +
ggtitle("                   Eric's Top Genres") +
scale_color_brewer(palette = 'Dark2') +
theme_classic() +
theme(axis.title.y = element_blank(), axis.title.x = element_blank())
## Create graph of Luka's top genres
luka_top <- genres.luka %>%
count(Genres) %>%
filter(Genres != "Unknown") %>%
arrange(desc(n)) %>%
head(15) %>%
ggplot(aes(x= -n, y = reorder(Genres, n))) +
geom_bar(stat = "identity", fill = "#D95F02") +
scale_x_continuous(breaks = c(-200,-150, -100, -50, 0), labels = c(200,150, 100, 50, 0), limits = c(-200, 0)) +
ggtitle("                   Luka's Top Genres") +
scale_color_brewer(palette = 'Dark2') +
theme_classic() +
theme(axis.title.y = element_blank(), axis.title.x = element_blank())
## DELETE one of these two
## Primary plot RELATIVE to each other
genrecomparision <- proportions %>% mutate(score_2 = (proportion_Eric - proportion_Luka)/(proportion_Eric + proportion_Luka)) %>%
ggplot(aes(y = reorder(Genres, score_2), x = score_2, col = score_2)) +
geom_vline(xintercept = 0) +
geom_point(size = 5) +
scale_x_continuous(breaks = c(-1, -0.3, 0, 0.3, 1),
labels=c("Strongly Prefered by Luka", "Preferred by Luka", "Similar Preference", "Preferred by Eric", "Strongly Prefered By Eric"),
limits = c(-1, 1.3)) +
scale_color_gradient(low = "#D95F02", high = "#1B9E77") +
theme_classic() +
theme(axis.title.y = element_blank(), legend.position = 'none', axis.title.x = element_blank(), panel.grid.major.x = element_line('#ededed'))
## Primary plot ABSOLUTE to each other
genrecomparision2 <- proportions %>% mutate(score = (proportion_Eric - proportion_Luka)) %>%
ggplot(aes(y = reorder(Genres, score), x = score, col = score)) +
geom_vline(xintercept = 0) +
geom_point(size = 5) +
scale_x_continuous(breaks = c(-1, 0, 1),
labels=c("Preferred by Luka", 0, "Preferred by Eric"),
limits = c(-0.2, 0.238)) +
scale_color_gradient(low = "#D95F02", high = "#1B9E77") +
theme_classic() +
theme(axis.title.y = element_blank(), legend.position = 'none', axis.title.x = element_blank(), panel.grid.major.x = element_line('#ededed'))
## Combine
options(repr.plot.width = 6, repr.plot.height = 15, repr.plot.res = 500)
grid.arrange(grobs = list(luka_top, eric_top, genrecomparision),
layout_matrix = rbind(c(3), c(1, 2)),
top = textGrob("Genre Preferences Between Eric and Luka",
gp = gpar(fontsize = 20, fontface = 2)),
bottom = textGrob("Count of Genre Tags in Library",
gp = gpar(fontsize = 14, fontface = 1),
hjust = 1, x = 0.63))
## Create graph of Eric's top genres
eric_top <- genres.eric %>%
replace(.=="NULL", "Unknown") %>%
count(Genres) %>% arrange(desc(n)) %>%
head(15) %>%
ggplot(aes(x= n, y = reorder(Genres, n))) +
geom_bar(stat = "identity", fill = "#1B9E77") +
scale_y_discrete(position = "right") +
ggtitle("                   Eric's Top Genres") +
scale_color_brewer(palette = 'Dark2') +
theme_classic() +
theme(axis.title.y = element_blank(), axis.title.x = element_blank())
## Create graph of Luka's top genres
luka_top <- genres.luka %>%
count(Genres) %>%
filter(Genres != "Unknown") %>%
arrange(desc(n)) %>%
head(15) %>%
ggplot(aes(x= -n, y = reorder(Genres, n))) +
geom_bar(stat = "identity", fill = "#D95F02") +
scale_x_continuous(breaks = c(-200,-150, -100, -50, 0), labels = c(200,150, 100, 50, 0), limits = c(-200, 0)) +
ggtitle("                   Luka's Top Genres") +
scale_color_brewer(palette = 'Dark2') +
theme_classic() +
theme(axis.title.y = element_blank(), axis.title.x = element_blank())
## DELETE one of these two
## Primary plot RELATIVE to each other
genrecomparision <- proportions %>% mutate(score_2 = (proportion_Eric - proportion_Luka)/(proportion_Eric + proportion_Luka)) %>%
ggplot(aes(y = reorder(Genres, score_2), x = score_2, col = score_2)) +
geom_vline(xintercept = 0) +
geom_point(size = 5) +
scale_x_continuous(breaks = c(-1, -0.5, 0, 0.5, 1),
labels=c("Strongly Prefered by Luka", "Preferred by Luka", "Similar Preference", "Preferred by Eric", "Strongly Prefered By Eric"),
limits = c(-1, 1.3)) +
scale_color_gradient(low = "#D95F02", high = "#1B9E77") +
theme_classic() +
theme(axis.title.y = element_blank(), legend.position = 'none', axis.title.x = element_blank(), panel.grid.major.x = element_line('#ededed'))
## Primary plot ABSOLUTE to each other
genrecomparision2 <- proportions %>% mutate(score = (proportion_Eric - proportion_Luka)) %>%
ggplot(aes(y = reorder(Genres, score), x = score, col = score)) +
geom_vline(xintercept = 0) +
geom_point(size = 5) +
scale_x_continuous(breaks = c(-1, 0, 1),
labels=c("Preferred by Luka", 0, "Preferred by Eric"),
limits = c(-0.2, 0.238)) +
scale_color_gradient(low = "#D95F02", high = "#1B9E77") +
theme_classic() +
theme(axis.title.y = element_blank(), legend.position = 'none', axis.title.x = element_blank(), panel.grid.major.x = element_line('#ededed'))
## Combine
options(repr.plot.width = 6, repr.plot.height = 15, repr.plot.res = 500)
grid.arrange(grobs = list(luka_top, eric_top, genrecomparision),
layout_matrix = rbind(c(3), c(1, 2)),
top = textGrob("Genre Preferences Between Eric and Luka",
gp = gpar(fontsize = 20, fontface = 2)),
bottom = textGrob("Count of Genre Tags in Library",
gp = gpar(fontsize = 14, fontface = 1),
hjust = 1, x = 0.63))
## Eric Features
features.eric <- tibble("trackName" = c("Doomsday by Architects","Marigold by Periphery", "Hereafter by Architects", "Blood Eagle by Periphery", "Ludens by Bring Me the Horizon", "Silence Speaks by While She Sleeps", "Cirice by Ghost", "Happy Song by Bring Me the Horizon", "Kababies by Infected Mushroom", "Stigmata by grandson"),
"danceability" = c(0.523, 0.417, 0.513, 0.492, 0.294, 0.478, 0.555, 0.295, 0.676, 0.469),
"energy" = c(0.979, 0.95, 0.973, 0.982, 0.679, 0.926, 0.798, 0.924, 0.637, 0.862),
"loudness" = c(-4.214, -5.78, -4.115, -5.251, -6.182, -4.728,  -5.658, -3.407, -7.199, -6.48),
"instrumentalness" = c(0.0000256, 0.000518, 0.00326, 0.0108, 0.0000513, 0, 0.000015, 0.00462, 0.822, 0.000322),
"valence" = c(0.179, 0.0676, 0.159, 0.0877, 0.383, 0.312, 0.284, 0.219, 0.264, 0.322),
"tempo" = c(125.038, 106.585, 121.018, 124.94, 198.03, 92.994, 89.987, 171.941, 138.024, 87.048)
)
## Luka Features
features.luka <- tibble("trackName" = c("Summer 99 by Tchami","Free Your Body by Chris Lake", "Why You Sleep With Mama by Benislav & Denkov", "Heartbass by Salvatore Ganacci", "Uebok Gotta Run by Apashe", "IM GONE by JOYRYDE", "Acquainted by
The Weeknd", "Do You? by Golden Features", "Nobody Else by
Dustycloud", "Wait Another Day by Mike Williams"),
"danceability" = c(0.81, 0.854, 0.742, 0.801, 0.518, 0.664, 0.372, 0.86, 0.748, 0.727),
"energy" = c(0.968, 0.922, 0.657, 0.921, 0.734, 0.953, 0.478, 0.503, 0.932, 0.912),
"loudness" = c(-3.984, -7.037, -4.382, -3.876, -4.72, -3.794, -9.835, -12.6, -4.837, -3.594),
"instrumentalness" = c(0.515, 0.0295, 0.0000141, 0.000534, 0.000662, 0.00665, 0, 0.113, 0.697, 0.000443),
"valence" = c(0.559, 0.821, 0.753, 0.502, 0.429, 0.21, 0.254, 0.153, 0.49, 0.671),
"tempo" = c(125.992, 124.995, 107.924, 140.009, 158.789, 125.679, 101.102, 117.997, 125.992, 126.023)
)
## Features of the Billboard Top Ten (Week of Feb 13)
features.billboard <- tibble("trackName" = c("Drivers License", "Mood", "34+35", "Levitating", "Go Crazy", "Positions", "Save Your Tears", "Holy", "Whoopty"),
"danceability" = c(0.585, 0.7, 0.514, 0.83, 0.702, 0.755, 0.737, 0.68, 0.673, 0.719),
"energy" = c(0.436, 0.722, 0.73, 0.585, 0.825, 0.578, 0.802, 0.826, 0.704, 0.648)
"instrumentalness" = c(0.0000131, 0, 0.0000954, 0, 0, 0, 0, 0.0000124, 0, 0),
## Eric Features
features.eric <- tibble("trackName" = c("Doomsday by Architects","Marigold by Periphery", "Hereafter by Architects", "Blood Eagle by Periphery", "Ludens by Bring Me the Horizon", "Silence Speaks by While She Sleeps", "Cirice by Ghost", "Happy Song by Bring Me the Horizon", "Kababies by Infected Mushroom", "Stigmata by grandson"),
"danceability" = c(0.523, 0.417, 0.513, 0.492, 0.294, 0.478, 0.555, 0.295, 0.676, 0.469),
"energy" = c(0.979, 0.95, 0.973, 0.982, 0.679, 0.926, 0.798, 0.924, 0.637, 0.862),
"loudness" = c(-4.214, -5.78, -4.115, -5.251, -6.182, -4.728,  -5.658, -3.407, -7.199, -6.48),
"instrumentalness" = c(0.0000256, 0.000518, 0.00326, 0.0108, 0.0000513, 0, 0.000015, 0.00462, 0.822, 0.000322),
"valence" = c(0.179, 0.0676, 0.159, 0.0877, 0.383, 0.312, 0.284, 0.219, 0.264, 0.322),
"tempo" = c(125.038, 106.585, 121.018, 124.94, 198.03, 92.994, 89.987, 171.941, 138.024, 87.048)
)
## Luka Features
features.luka <- tibble("trackName" = c("Summer 99 by Tchami","Free Your Body by Chris Lake", "Why You Sleep With Mama by Benislav & Denkov", "Heartbass by Salvatore Ganacci", "Uebok Gotta Run by Apashe", "IM GONE by JOYRYDE", "Acquainted by
The Weeknd", "Do You? by Golden Features", "Nobody Else by
Dustycloud", "Wait Another Day by Mike Williams"),
"danceability" = c(0.81, 0.854, 0.742, 0.801, 0.518, 0.664, 0.372, 0.86, 0.748, 0.727),
"energy" = c(0.968, 0.922, 0.657, 0.921, 0.734, 0.953, 0.478, 0.503, 0.932, 0.912),
"loudness" = c(-3.984, -7.037, -4.382, -3.876, -4.72, -3.794, -9.835, -12.6, -4.837, -3.594),
"instrumentalness" = c(0.515, 0.0295, 0.0000141, 0.000534, 0.000662, 0.00665, 0, 0.113, 0.697, 0.000443),
"valence" = c(0.559, 0.821, 0.753, 0.502, 0.429, 0.21, 0.254, 0.153, 0.49, 0.671),
"tempo" = c(125.992, 124.995, 107.924, 140.009, 158.789, 125.679, 101.102, 117.997, 125.992, 126.023)
)
## Features of the Billboard Top Ten (Week of Feb 13)
features.billboard <- tibble("trackName" = c("Drivers License", "Mood", "34+35", "Levitating", "Go Crazy", "Positions", "Save Your Tears", "Holy", "Whoopty"),
"danceability" = c(0.585, 0.7, 0.514, 0.83, 0.702, 0.755, 0.737, 0.68, 0.673, 0.719),
"energy" = c(0.436, 0.722, 0.73, 0.585, 0.825, 0.578, 0.802, 0.826, 0.704, 0.648),
"instrumentalness" = c(0.0000131, 0, 0.0000954, 0, 0, 0, 0, 0.0000124, 0, 0),
"valence" = c(0.132, 0.756, 0.334, 0.485, 0.915, 0.581, 0.682, 0.644, 0.372, 0.66)
)
## Eric Features
features.eric <- tibble("trackName" = c("Doomsday by Architects","Marigold by Periphery", "Hereafter by Architects", "Blood Eagle by Periphery", "Ludens by Bring Me the Horizon", "Silence Speaks by While She Sleeps", "Cirice by Ghost", "Happy Song by Bring Me the Horizon", "Kababies by Infected Mushroom", "Stigmata by grandson"),
"danceability" = c(0.523, 0.417, 0.513, 0.492, 0.294, 0.478, 0.555, 0.295, 0.676, 0.469),
"energy" = c(0.979, 0.95, 0.973, 0.982, 0.679, 0.926, 0.798, 0.924, 0.637, 0.862),
"loudness" = c(-4.214, -5.78, -4.115, -5.251, -6.182, -4.728,  -5.658, -3.407, -7.199, -6.48),
"instrumentalness" = c(0.0000256, 0.000518, 0.00326, 0.0108, 0.0000513, 0, 0.000015, 0.00462, 0.822, 0.000322),
"valence" = c(0.179, 0.0676, 0.159, 0.0877, 0.383, 0.312, 0.284, 0.219, 0.264, 0.322),
"tempo" = c(125.038, 106.585, 121.018, 124.94, 198.03, 92.994, 89.987, 171.941, 138.024, 87.048)
)
## Luka Features
features.luka <- tibble("trackName" = c("Summer 99 by Tchami","Free Your Body by Chris Lake", "Why You Sleep With Mama by Benislav & Denkov", "Heartbass by Salvatore Ganacci", "Uebok Gotta Run by Apashe", "IM GONE by JOYRYDE", "Acquainted by
The Weeknd", "Do You? by Golden Features", "Nobody Else by
Dustycloud", "Wait Another Day by Mike Williams"),
"danceability" = c(0.81, 0.854, 0.742, 0.801, 0.518, 0.664, 0.372, 0.86, 0.748, 0.727),
"energy" = c(0.968, 0.922, 0.657, 0.921, 0.734, 0.953, 0.478, 0.503, 0.932, 0.912),
"loudness" = c(-3.984, -7.037, -4.382, -3.876, -4.72, -3.794, -9.835, -12.6, -4.837, -3.594),
"instrumentalness" = c(0.515, 0.0295, 0.0000141, 0.000534, 0.000662, 0.00665, 0, 0.113, 0.697, 0.000443),
"valence" = c(0.559, 0.821, 0.753, 0.502, 0.429, 0.21, 0.254, 0.153, 0.49, 0.671),
"tempo" = c(125.992, 124.995, 107.924, 140.009, 158.789, 125.679, 101.102, 117.997, 125.992, 126.023)
)
## Features of the Billboard Top Ten (Week of Feb 13)
features.billboard <- tibble("trackName" = c("Drivers License", "Mood", "Blinding Lights", "34+35", "Levitating", "Go Crazy", "Positions", "Save Your Tears", "Holy", "Whoopty"),
"danceability" = c(0.585, 0.7, 0.514, 0.83, 0.702, 0.755, 0.737, 0.68, 0.673, 0.719),
"energy" = c(0.436, 0.722, 0.73, 0.585, 0.825, 0.578, 0.802, 0.826, 0.704, 0.648),
"instrumentalness" = c(0.0000131, 0, 0.0000954, 0, 0, 0, 0, 0.0000124, 0, 0),
"valence" = c(0.132, 0.756, 0.334, 0.485, 0.915, 0.581, 0.682, 0.644, 0.372, 0.66)
)
# Tidy data into something usable by ggplot
features.eric.tidy <- features.eric %>% gather(key = "metric", value = "score", colnames(features.eric)[-1])
subset.eric <- features.eric.tidy %>% filter(metric != "tempo" & metric != "loudness")
subset.eric$person <- replicate(nrow(subset.eric), "Eric")
features.luka.tidy <- features.luka %>% gather(key = "metric", value = "score", colnames(features.luka)[-1])
subset.luka <- features.luka.tidy %>% filter(metric != "tempo" & metric != "loudness")
subset.luka$person <- replicate(nrow(subset.luka), "Luka")
features.billboard.tidy <- features.billboard %>% gather(key = "metric", value = "score", colnames(features.billboard)[-1])
subset.billboard <- features.billboard.tidy %>% filter(metric != "tempo" & metric != "loudness")
subset.billboard$person <- replicate(nrow(subset.luka), "Billboard Top Ten")
metrics.both <- rbind(subset.eric, subset.luka, subset.billboard)
sample_n(metrics.both, 10)
metrics.both %>%
ggplot(aes(x = metric, y = score, col = person)) +
geom_point(position = position_dodge(width = 0.5), size = 2, alpha = 0.5) +
stat_summary(geom = "errorbar", fun.min = mean, fun = mean, fun.max = mean, width = 0.3, linetype = "solid", position = position_dodge(), size = 2) +
labs(y = "Score",
title = "Features of Eric and Luka's Ten Most Played Songs",
subtitle = "Metrics from Spotify with bars representing means") +
scale_color_brewer(palette = 'Dark2') +
theme_article() +
theme(axis.title.x = element_blank(), legend.title = element_blank(), legend.position = c(0.07,0.94))
metrics.both %>%
ggplot(aes(x = metric, y = score, col = person)) +
geom_point(position = position_dodge(width = 0.5), size = 2, alpha = 0.5) +
stat_summary(geom = "errorbar", fun.min = mean, fun = mean, fun.max = mean, width = 0.3, linetype = "solid", position = position_dodge(), size = 2) +
labs(y = "Score",
title = "Features of Eric and Luka's Ten Most Played Songs",
subtitle = "Metrics from Spotify with bars representing means") +
scale_color_manual(values = c("#7570B3", "#1B9E77", "#D95F02")) +
theme_article() +
theme(axis.title.x = element_blank(), legend.title = element_blank(), legend.position = c(0.07,0.94))
## Create graph of Eric's top genres
eric_top <- genres.eric %>%
replace(.=="NULL", "Unknown") %>%
count(Genres) %>% arrange(desc(n)) %>%
head(15) %>%
ggplot(aes(x= n, y = reorder(Genres, n))) +
geom_bar(stat = "identity", fill = "#1B9E77") +
scale_y_discrete(position = "right") +
ggtitle("                   Eric's Top Genres") +
scale_color_brewer(palette = 'Dark2') +
theme_classic() +
theme(axis.title.y = element_blank(), axis.title.x = element_blank())
## Create graph of Luka's top genres
luka_top <- genres.luka %>%
count(Genres) %>%
filter(Genres != "Unknown") %>%
arrange(desc(n)) %>%
head(15) %>%
ggplot(aes(x= -n, y = reorder(Genres, n))) +
geom_bar(stat = "identity", fill = "#D95F02") +
scale_x_continuous(breaks = c(-200,-150, -100, -50, 0), labels = c(200,150, 100, 50, 0), limits = c(-200, 0)) +
ggtitle("                   Luka's Top Genres") +
scale_color_brewer(palette = 'Dark2') +
theme_classic() +
theme(axis.title.y = element_blank(), axis.title.x = element_blank())
## DELETE one of these two
## Primary plot RELATIVE to each other
genrecomparision <- proportions %>% mutate(score_2 = (proportion_Eric - proportion_Luka)/(proportion_Eric + proportion_Luka)) %>%
ggplot(aes(y = reorder(Genres, score_2), x = score_2, col = score_2)) +
geom_vline(xintercept = 0) +
geom_point(size = 5) +
scale_x_continuous(breaks = c(-1, -0.5, 0, 0.5, 1),
labels=c("Strongly Prefered by Luka", "Preferred by Luka", "Similar Preference", "Preferred by Eric", "Strongly Prefered By Eric"),
limits = c(-1, 1.3)) +
scale_color_gradient(low = "#D95F02", high = "#1B9E77") +
theme_classic() +
theme(axis.title.y = element_blank(), legend.position = 'none', axis.title.x = element_blank(), panel.grid.major.x = element_line('#ededed'))
## Primary plot ABSOLUTE to each other
genrecomparision2 <- proportions %>% mutate(score = (proportion_Eric - proportion_Luka)) %>%
ggplot(aes(y = reorder(Genres, score), x = score, col = score)) +
geom_vline(xintercept = 0) +
geom_point(size = 5) +
scale_x_continuous(breaks = c(-1, 0, 1),
labels=c("Preferred by Luka", 0, "Preferred by Eric"),
limits = c(-0.2, 0.238)) +
scale_color_gradient(low = "#D95F02", high = "#1B9E77") +
theme_classic() +
theme(axis.title.y = element_blank(), legend.position = 'none', axis.title.x = element_blank(), panel.grid.major.x = element_line('#ededed'))
## Combine
options(repr.plot.width = 6, repr.plot.height = 15, repr.plot.res = 500)
grid.arrange(grobs = list(luka_top, eric_top, genrecomparision),
layout_matrix = rbind(c(3), c(1, 2)),
top = textGrob("Genre Preferences Between Luka and Eric",
gp = gpar(fontsize = 20, fontface = 2)),
bottom = textGrob("Count of Genre Tags in Library",
gp = gpar(fontsize = 14, fontface = 1),
hjust = 1, x = 0.63))
metrics.both %>%
ggplot(aes(x = metric, y = score, col = person)) +
geom_point(position = position_dodge(width = 0.5), size = 2, alpha = 0.5) +
stat_summary(geom = "errorbar", fun.min = mean, fun = mean, fun.max = mean, width = 0.3, linetype = "solid", position = position_dodge(), size = 2) +
labs(y = "Score",
title = "Features of Eric and Luka's Ten Most Played Songs",
subtitle = "Metrics from Spotify with bars representing means") +
scale_color_manual(values = c("#7570B3", "#1B9E77", "#D95F02")) +
theme_article() +
theme(axis.title.x = element_blank(), legend.title = element_blank(), legend.position = c(0.1,0.94))
metrics.both %>%
ggplot(aes(x = metric, y = score, col = person)) +
geom_point(position = position_dodge(width = 0.5), size = 2, alpha = 0.5) +
stat_summary(geom = "errorbar", fun.min = mean, fun = mean, fun.max = mean, width = 0.3, linetype = "solid", position = position_dodge(), size = 2) +
labs(y = "Score",
title = "Features of Eric and Luka's Ten Most Played Songs",
subtitle = "Metrics from Spotify with bars representing means") +
scale_color_manual(values = c("#7570B3", "#1B9E77", "#D95F02")) +
theme_article() +
theme(axis.title.x = element_blank(), legend.title = element_blank(), legend.position = c(0.12,0.94))
metrics.both %>%
ggplot(aes(x = metric, y = score, col = person)) +
geom_point(position = position_dodge(width = 0.5), size = 2, alpha = 0.5) +
stat_summary(geom = "errorbar", fun.min = mean, fun = mean, fun.max = mean, width = 0.3, linetype = "solid", size = 2) +
labs(y = "Score",
title = "Features of Eric and Luka's Ten Most Played Songs",
subtitle = "Metrics from Spotify with bars representing means") +
scale_color_manual(values = c("#7570B3", "#1B9E77", "#D95F02")) +
theme_article() +
theme(axis.title.x = element_blank(), legend.title = element_blank(), legend.position = c(0.12,0.94))
metrics.both %>%
ggplot(aes(x = metric, y = score, col = person)) +
geom_point(position = position_dodge(width = 0.5), size = 2, alpha = 0.5) +
stat_summary(geom = "errorbar", fun.min = mean, fun = mean, fun.max = mean, width = 0.5, linetype = "solid", size = 1.5) +
labs(y = "Score",
title = "Features of Eric and Luka's Ten Most Played Songs",
subtitle = "Metrics from Spotify with bars representing means") +
scale_color_manual(values = c("#7570B3", "#1B9E77", "#D95F02")) +
theme_article() +
theme(axis.title.x = element_blank(), legend.title = element_blank(), legend.position = c(0.12,0.94))
metrics.both %>%
ggplot(aes(x = metric, y = score, col = person)) +
geom_point(position = position_dodge(width = 0.5), size = 2, alpha = 0.5) +
stat_summary(geom = "errorbar", fun.min = mean, fun = mean, fun.max = mean, width = 0.4, linetype = "solid", size = 1.5) +
labs(y = "Score",
title = "Features of Eric and Luka's Ten Most Played Songs",
subtitle = "Metrics from Spotify with bars representing means") +
scale_color_manual(values = c("#7570B3", "#1B9E77", "#D95F02")) +
theme_article() +
theme(axis.title.x = element_blank(), legend.title = element_blank(), legend.position = c(0.12,0.94))
## Eric Features
features.eric <- tibble("trackName" = c("Doomsday by Architects","Marigold by Periphery",
"Hereafter by Architects", "Blood Eagle by Periphery",
"Ludens by Bring Me the Horizon",
"Silence Speaks by While She Sleeps",
"Cirice by Ghost", "Happy Song by Bring Me the Horizon",
"Kababies by Infected Mushroom", "Stigmata by grandson"),
"danceability" = c(0.523, 0.417, 0.513, 0.492, 0.294, 0.478,
0.555, 0.295, 0.676, 0.469),
"energy" = c(0.979, 0.95, 0.973, 0.982, 0.679, 0.926, 0.798,
0.924, 0.637, 0.862),
"loudness" = c(-4.214, -5.78, -4.115, -5.251, -6.182, -4.728,
-5.658, -3.407, -7.199, -6.48),
"instrumentalness" = c(0.0000256, 0.000518, 0.00326, 0.0108,
0.0000513, 0, 0.000015, 0.00462, 0.822, 0.000322),
"valence" = c(0.179, 0.0676, 0.159, 0.0877, 0.383, 0.312, 0.284,
0.219, 0.264, 0.322),
"tempo" = c(125.038, 106.585, 121.018, 124.94, 198.03, 92.994,
89.987, 171.941, 138.024, 87.048)
)
## Luka Features
features.luka <- tibble("trackName" = c("Summer 99 by Tchami","Free Your Body by Chris Lake",
"Why You Sleep With Mama by Benislav & Denkov",
"Heartbass by Salvatore Ganacci",
"Uebok Gotta Run by Apashe", "IM GONE by JOYRYDE",
"Acquainted by The Weeknd", "Do You? by Golden Features",
"Nobody Else by Dustycloud",
"Wait Another Day by Mike Williams"),
"danceability" = c(0.81, 0.854, 0.742, 0.801, 0.518, 0.664, 0.372,
0.86, 0.748, 0.727),
"energy" = c(0.968, 0.922, 0.657, 0.921, 0.734, 0.953, 0.478,
0.503, 0.932, 0.912),
"loudness" = c(-3.984, -7.037, -4.382, -3.876, -4.72, -3.794,
-9.835, -12.6, -4.837, -3.594),
"instrumentalness" = c(0.515, 0.0295, 0.0000141, 0.000534,
0.000662, 0.00665, 0, 0.113, 0.697, 0.000443),
"valence" = c(0.559, 0.821, 0.753, 0.502, 0.429, 0.21, 0.254,
0.153, 0.49, 0.671),
"tempo" = c(125.992, 124.995, 107.924, 140.009, 158.789,
125.679, 101.102, 117.997, 125.992, 126.023)
)
## Features of the Billboard Top Ten (Week of Feb 13)
features.billboard <- tibble("trackName" = c("Drivers License", "Mood", "Blinding Lights",
"34+35", "Levitating", "Go Crazy", "Positions",
"Save Your Tears", "Holy", "Whoopty"),
"danceability" = c(0.585, 0.7, 0.514, 0.83, 0.702, 0.755,
0.737, 0.68, 0.673, 0.719),
"energy" = c(0.436, 0.722, 0.73, 0.585, 0.825, 0.578, 0.802,
0.826, 0.704, 0.648),
"instrumentalness" = c(0.0000131, 0, 0.0000954, 0, 0, 0,
0, 0.0000124, 0, 0),
"valence" = c(0.132, 0.756, 0.334, 0.485, 0.915, 0.581,
0.682, 0.644, 0.372, 0.66)
)
# Tidy data into something usable by ggplot
features.eric.tidy <- features.eric %>%
gather(key = "metric", value = "score", colnames(features.eric)[-1])
subset.eric <- features.eric.tidy %>%
filter(metric != "tempo" & metric != "loudness")
subset.eric$person <- replicate(nrow(subset.eric), "Eric")
features.luka.tidy <- features.luka %>%
gather(key = "metric", value = "score", colnames(features.luka)[-1])
subset.luka <- features.luka.tidy %>%
filter(metric != "tempo" & metric != "loudness")
subset.luka$person <- replicate(nrow(subset.luka), "Luka")
features.billboard.tidy <- features.billboard %>%
gather(key = "metric", value = "score", colnames(features.billboard)[-1])
subset.billboard <- features.billboard.tidy %>%
filter(metric != "tempo" & metric != "loudness")
subset.billboard$person <- replicate(nrow(subset.luka), "Billboard Top Ten")
metrics.both <- rbind(subset.eric, subset.luka, subset.billboard)
sample_n(metrics.both, 10)
?test_check
getwd()
test_check()
Rscript test_Eric.R
Rscript "test_Eric.R"
test_Eric.R
R.version
